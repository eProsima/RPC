// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file CalculatorProxy.h
 * This header file contains the declaration of the proxy for all interfaces.
 *
 * This file was generated by the tool rpcddsgen.
 */

#ifndef _Calculator_PROXY_H_
#define _Calculator_PROXY_H_

#include <rpcdds/client/Proxy.h>
#include "Calculator.h"
#include "CalculatorAsyncCallbackHandlers.h"


namespace eprosima
{
    namespace rpc
    {
        namespace protocol
        {
            class CalculatorProtocol;
        }
    }
}

/*!
 * @brief This class implements a specific server's proxy for the defined interface Calculator.
 * @ingroup Calculator
 */
class RPCUSERDllExport CalculatorProxy : public eprosima::rpc::proxy::Proxy, public Calculator
{
    public:

        /*!
         * @brief This constructor sets the transport that will be used by the server's proxy.
         *
         * @param transport The network transport that server's proxy has to use.
         *        This transport's object is not deleted by this class in its destructor. Cannot be NULL.
         * @param protocol The protocol used to send the information over the transport.
         *        This protocol's object is not deleted by this class in its destructor. Cannot be NULL.
         * @exception eprosima::rpc::exception::InitializeException This exception is thrown when the initialization was wrong.
         */
        CalculatorProxy(eprosima::rpc::transport::ProxyTransport &transport,
            eprosima::rpc::protocol::CalculatorProtocol &protocol);

        //! @brief Destructor.
        virtual ~CalculatorProxy();

                //! @brief Proxy method for the operation addition.
                int32_t addition(
                        /*in*/ int32_t value1,
                        /*in*/ int32_t value2);

                //! @brief Proxy asynchronous method for the operation addition.
                void addition_async(
                        Calculator_additionCallbackHandler &obj, /*in*/ int32_t value1,
                                                                 /*in*/ int32_t value2);


                //! @brief Proxy method for the operation subtraction.
                int32_t subtraction(
                        /*in*/ int32_t value1,
                        /*in*/ int32_t value2);

                //! @brief Proxy asynchronous method for the operation subtraction.
                void subtraction_async(
                        Calculator_subtractionCallbackHandler &obj, /*in*/ int32_t value1,
                                                                    /*in*/ int32_t value2);



};


#endif // _Calculator_PROXY_H_