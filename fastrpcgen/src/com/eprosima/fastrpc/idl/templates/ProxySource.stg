group ProxySource;

import "Common.stg"
import "eprosima.stg"
import "com/eprosima/fastcdr/idl/templates/FastCdrCommon.stg"

main(ctx, definitions) ::= <<
$fileHeader(ctx=ctx,  file=[ctx.filename, "Proxy.cxx"], description=["This source file contains the definition of the proxy for all interfaces."])$

#include "$ctx.filename$Proxy.h"
#include <$ctx.includePrefix$transports/ProxyTransport.h>
#include "$ctx.filename$Protocol.h"

$definitions; separator="\n"$
>>

module(ctx, parent, module, definition_list) ::= <<
namespace $module.name$
{
    $definition_list$
};

>>

/*!
 * The export_list will be the definition of synchronize functions.
 */
interface(ctx, parent, interface, export_list) ::= <<
$interface.name$Proxy::$interface.name$Proxy(eprosima::rpc::transport::ProxyTransport &transport,
    eprosima::rpc::protocol::$ctx.filename$Protocol &protocol) : Proxy(transport, protocol)
{
    protocol.activateInterface("$interface.scopedname$");
}

$interface.name$Proxy::~$interface.name$Proxy()
{
}

$interface.all_operations : {operation|
$paramRetType(operation.rettype)$ $interface.name$Proxy::$operation.name$(
        $paramDeclarations(params=operation.parameters)$)
{
    $if(operation.rettypeparam)$
    $paramRetType(operation.rettype)$ $operation.rettypeparam.name$ =
    $endif$
    dynamic_cast<eprosima::rpc::protocol::$ctx.filename$Protocol&>(getProtocol()).$interface.formatedScopedname$_$operation.name$($extractParams(params=operation.parameters)$);
    $if(operation.rettypeparam)$
    return $operation.rettypeparam.name$;
    $endif$
\}

$if(ctx.dds)$
$if(!operation.oneway)$
void $interface.name$Proxy::$operation.name$_async
        ($interface.name$_$operation.name$CallbackHandler &obj$paramDeclarations(params=operation.inputparam, initialSeparator=", ")$)
{
    dynamic_cast<eprosima::rpc::protocol::$ctx.filename$Protocol&>(getProtocol()).$interface.formatedScopedname$_$operation.name$_async(obj$extractParams(params=operation.inputparam, initialSeparator=", ")$);
\}

$endif$
$endif$
}; separator="\n"$

$export_list$

>>
